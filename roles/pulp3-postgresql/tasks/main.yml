---
- name: Load OS specific variables
  include_vars: '{{ ansible_distribution }}.yml'
  tags:
    - always

- block:

    - name: Install SCL package
      package:
        name: 'centos-release-scl'
        state: present
      when: ansible_distribution == 'CentOS'

    - name: Install psycopg2 package
      package:
        name: 'python2-psycopg2'
        state: present
      when: ansible_distribution == 'Fedora'

    - name: Set listen addresses
      set_fact:
        postgresql_global_config_options:
          - option: listen_addresses
            value: "*"
      when: pulp_postgresql_host != 'localhost'

    - name: Install and configure PostgreSQL
      import_role:
        name: geerlingguy.postgresql

    - meta: flush_handlers

  become: true

- name: Get the exact pulpcore install dir
  find:
    paths: '{{ pulp_install_dir }}/lib/'
    pattern: '^python.\..$'
    use_regex: true
    file_type: directory
  register: result

- name: Assert the pulpcore install dir was found
  assert:
    that: '{{ result.matched }} == 1'

- block:

    - name: Create the pulpcore migrations directory
      file:
        name: '{{ result.files[0].path }}/site-packages/pulpcore/app/migrations'
        state: directory
        owner: '{{ pulp_user }}'
        group: '{{ pulp_user }}'
        mode: 0700
      when: pulp_source_dir is undefined

    - name: Create the plugin migrations directories
      file:
        name: '{{ result.files[0].path }}/site-packages/{{ item }}/app/migrations'
        state: directory
        owner: '{{ pulp_user }}'
        group: '{{ pulp_user }}'
        mode: 0700
      with_items: "{{ pulp_install_plugins }}"
      when: pulp_install_plugins[item].source_dir is undefined

    - name: Create database migrations for pulp_app
      command: '{{ pulp_install_dir }}/bin/pulp-manager makemigrations pulp_app'
      register: result
      changed_when: "'No changes detected in app' not in result.stdout"

    - name: Create database migrations for plugins
      command: '{{ pulp_install_dir }}/bin/pulp-manager makemigrations {{ pulp_install_plugins[item].app_label}}'
      with_items: "{{ pulp_install_plugins }}"
      register: result
      changed_when: "'No changes detected in app' not in result.stdout"

    - name: Run database auth migrations
      command: '{{ pulp_install_dir }}/bin/pulp-manager migrate auth --no-input'
      register: migrate_auth
      changed_when: "'No migrations to apply' not in migrate_auth.stdout"

    - name: Run database migrations
      command: '{{ pulp_install_dir }}/bin/pulp-manager migrate --no-input'
      register: result
      changed_when: "'No migrations to apply' not in result.stdout"

    - name: Set the Pulp admin user's password
      command: '{{ pulp_install_dir }}/bin/pulp-manager reset-admin-password --password {{ pulp_default_admin_password }}'
      no_log: true
      when: pulp_default_admin_password is defined and migrate_auth.changed

  become: true
  become_user: '{{ pulp_user }}'
