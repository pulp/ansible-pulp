---
- block:

    - name: Install EPEL Release
      package:
        name: epel-release
        state: present
      when: ansible_distribution == 'CentOS'

    - name: Install prerequisites
      package:
        name: '{{ pulp_preq_packages }}'
        state: present

    # Needed by psycopg2-binary from PyPI
    - name: Install prerequisites (Fedora 30+ only)
      package:
        name: libxcrypt-compat
        state: present
      when:
        - ansible_distribution == "Fedora"
        - ansible_distribution_version|int >= 30

    - name: Disable SELinux (Pulp 3 is currently incompatible with SELinux)
      selinux:
        policy: targeted
        state: permissive
      when: ansible_os_family == 'RedHat'

    # Become root so as to search paths like /usr/sbin.
    - name: Find the nologin executable
      command: which nologin
      changed_when: False
      check_mode: False
      register: result

    - name: Create user {{ pulp_user }}
      user:
        name: '{{ pulp_user }}'
        shell: '{{ result.stdout.strip() }}'
        home: '{{ pulp_user_home }}'
        system: true
      when: developer_user is not defined

    - name: Create cache dir for Pulp
      file:
        path: '{{ pulp_cache_dir }}'
        state: directory
        owner: '{{ pulp_user }}'
        group: '{{ pulp_user }}'
        mode: 0775

    - name: Create pulp install dir
      file:
        path: '{{ pulp_install_dir }}'
        state: directory
        owner: '{{ pulp_user }}'
        group: '{{ pulp_user }}'

    - name: Install packages needed for source install
      package:
        name:
          - git
        state: present
      register: result
      until: result is succeeded

    - name: Install RPM prerequisities
      package:
        name: '{{ item }}'
        state: present
      with_items:
        - createrepo_c
        - python3-createrepo_c
      when: "'pulp-rpm' in pulp_install_plugins"

  become: true

- block:

    # hack for allow use system wide site-packages
    - name: Create virtualenv with access to system-wide site-packages
      pip:
        virtualenv: '{{ pulp_install_dir }}'
        virtualenv_command: '{{ pulp_python_interpreter }} -m venv --system-site-packages'
        name: pip
        state: present
      when: "'pulp-rpm' in pulp_install_plugins"

    - name: Install idna <2.8  # https://github.com/requests/requests/issues/4890
      pip:
        name: idna
        version: 2.7
        virtualenv: '{{ pulp_install_dir }}'
        virtualenv_command: '{{ pulp_python_interpreter }} -m venv'

    - name: Install the psycopg python package
      pip:
        name: psycopg2-binary
        state: present
        virtualenv: '{{ pulp_install_dir }}'
        virtualenv_command: '{{ pulp_python_interpreter }} -m venv'
      when: pulp_db_type == "postgres"

    - name: Install the mysqlclient python package
      pip:
        name: mysqlclient
        state: present
        virtualenv: '{{ pulp_install_dir }}'
        virtualenv_command: '{{ pulp_python_interpreter }} -m venv'
      when: pulp_db_type == "mariadb"

    - name: Install pulpcore package from source
      pip:
        name: '{{ pulp_source_dir }}'
        editable: '{{ pulp_pip_editable }}'
        state: present
        virtualenv: '{{ pulp_install_dir }}'
        virtualenv_command: '{{ pulp_python_interpreter }} -m venv'
      when: pulp_source_dir is defined
      # This is a hack. Editable pip installs are always changed, which fails molecule's
      # idempotence test.
      changed_when: result.changed and not pulp_pip_editable
      notify: Collect static content

    - name: Install pulpcore-plugin package from source
      pip:
        name: '{{ pulp_plugin_source_dir }}'
        editable: '{{ pulp_pip_editable }}'
        state: present
        virtualenv: '{{ pulp_install_dir }}'
        virtualenv_command: '{{ pulp_python_interpreter }} -m venv'
      when: pulp_plugin_source_dir is defined
      # This is a hack. Editable pip installs are always changed, which fails molecule's
      # idempotence test.
      changed_when: result.changed and not pulp_pip_editable
      notify: Collect static content

    - name: Install Pulp plugins via PyPI
      pip:
        name: '{{ item.key }}'
        state: present
        virtualenv: '{{ pulp_install_dir }}'
        virtualenv_command: '{{ pulp_python_interpreter }} -m venv'
      with_dict: '{{ pulp_install_plugins }}'
      when: pulp_install_plugins[item.key].source_dir is undefined
      notify: Collect static content

    - name: Install Pulp plugins from source
      pip:
        name: '{{ item.value.source_dir }}'
        editable: '{{ pulp_pip_editable }}'
        state: present
        virtualenv: '{{ pulp_install_dir }}'
        virtualenv_command: '{{ pulp_python_interpreter }} -m venv'
      with_dict: '{{ pulp_install_plugins }}'
      when: pulp_install_plugins[item.key].source_dir is defined
      # This is a hack. Editable pip installs are always changed, which fails molecule's
      # idempotence test.
      changed_when: result.changed and not pulp_pip_editable
      notify: Collect static content

  become: true
  become_user: '{{ pulp_user }}'
