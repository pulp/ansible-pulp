# Molecule managed

FROM {{ item.image }}

ENV container docker

{% if item.name.startswith('centos') or item.name.startswith('fedora') %}
RUN (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); \
rm -f /lib/systemd/system/multi-user.target.wants/*;\
rm -f /etc/systemd/system/*.wants/*;\
rm -f /lib/systemd/system/local-fs.target.wants/*; \
rm -f /lib/systemd/system/sockets.target.wants/*udev*; \
rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \
rm -f /lib/systemd/system/basic.target.wants/*;\
rm -f /lib/systemd/system/anaconda.target.wants/*;
{% endif %}

{% if item.name.startswith('centos') %}
RUN yum install -y epel-release ;\
yum makecache fast ;\
yum update -y ;\
yum install -y \
  bash \
  firewalld \
  iptables \
  jemalloc \
  python \
  python2-dnf \
  selinux-policy \
  sudo \
  which \
  yum-plugin-ovl \
  ;\
sed -i 's/plugins=0/plugins=1/g' /etc/yum.conf ;\
yum clean all
{% elif item.name.startswith('debian') %}
ENV LC_ALL C
ENV DEBIAN_FRONTEND noninteractive

RUN apt-get update &&\
apt-get -y install \
  kmod \
  net-tools \
  systemd \
  systemd-sysv \
  &&\
rm /sbin/modprobe &&\
ln -s /bin/true /sbin/modprobe &&\
rm -f /lib/systemd/system/multi-user.target.wants/* \
  /etc/systemd/system/*.wants/* \
  /lib/systemd/system/local-fs.target.wants/* \
  /lib/systemd/system/sockets.target.wants/*udev* \
  /lib/systemd/system/sockets.target.wants/*initctl* \
  /lib/systemd/system/sysinit.target.wants/systemd-tmpfiles-setup* \
  /lib/systemd/system/systemd-update-utmp* &&\
apt-get -y install \
  bash \
  firewalld \
  iptables \
  python3 \
  python3-setuptools \
  sudo \
  &&\
apt-get clean &&\
rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* &&\
systemctl enable firewalld
{% elif item.name.startswith('fedora') %}
RUN echo 'LANG="en_US.UTF-8"' > /etc/locale.conf ;\
ENV LANG=en_US.UTF-8 ;\
ENV LANGUAGE=en_US.UTF-8 ;\
ENV LC_ALL=en_US.UTF-8 ;\
ENV PYTHONUNBUFFERED=0 ;\
dnf --assumeyes install \
  bash \
  firewalld \
  glibc-langpack-en \
  iptables \
  jemalloc \
  python3 \
  python3-dnf \
  python3-firewall \
  selinux-policy \
  sudo \
  which \
  ;\
dnf clean all;
{% endif %}

# Disable requiretty.
RUN sed -i -e 's/^\(Defaults\s*requiretty\)/#--- \1/'  /etc/sudoers

VOLUME ["/sys/fs/cgroup", "/tmp", "/run"]

CMD ["{{ item.command }}"]
